parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: Artifacts
    type: object
    default: []
  - name: DependsOn
    type: string
    default: ''
  - name: RunCoverage
    type: boolean
    default: true


jobs:
  - job: Publish_Code_Coverage

    steps:
      # - script: |
      #     codecov -t $(codecov-python-repository-token)
      #   displayName: 'Publish Code Cov'
      #   continueOnError: true
      #   condition: and(ne(variables['codecov-python-repository-token'], ''), succeededOrFailed(), ${{ parameters.RunCoverage }})

      # - task: PublishPipelineArtifact@1
      #   displayName: 'Publish .coverage files'
      #   continueOnError: true
      #   condition: and(succeededOrFailed(), ${{ parameters.RunCoverage }})
      #   inputs:
      #     targetPath: '$(Build.SourcesDirectory)/_coverage'
      #     artifactType: 'pipeline'

      # Download all existing artifacts (most of the time, it's whatever was uploaded before)
      - pwsh: |
          New-Item -Path $(Build.SourcesDirectory) -Name "_all_coverage_files" -ItemType "directory"
        displayName: 'Create all coverages directory'
        continueOnError: true
        condition: and(succeededOrFailed(), ${{ parameters.RunCoverage }})

      - task: DownloadPipelineArtifact@2
        inputs:
          source: current
          # patterns: '**' # Download everything
          path: '$(Build.SourcesDirectory)/_all_coverage_files'

      - pwsh: |
          Get-ChildItem $(Build.SourcesDirectory)/ -Recurse

      - task: PythonScript@0
        displayName: 'Create Coverage Report'
        inputs:
          scriptPath: 'scripts/devops_tasks/create_coverage.py'
          # arguments: >-
          #   "${{ parameters.BuildTargetingString }}"
          #   --service="${{ parameters.ServiceDirectory }}"
          #   --toxenv="samples"
          # env: ${{ parameters.EnvVars }}

      - pwsh: |
          Get-ChildItem -Recurse

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish Code Coverage to DevOps'
        continueOnError: true
        condition: and(succeededOrFailed(), ${{ parameters.RunCoverage }})
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(Build.SourcesDirectory)/coverage.xml'

  - job: Show_all_coverage_files

    steps:
    - pwsh: |
          Get-ChildItem -Recurse
